#!/usr/bin/env python
from std_msgs.msg import String
import rospy
import threading
import subprocess32
import sys
import os
import datetime
import signal

class Launcher(object):
    def __init__(self):
        self._sub = rospy.Subscriber("/sandtray/interaction_events", String, self.on_event)
        self._p = None

    def on_event(self, message):
        if message.data == "record":
            self.record()
            print "start"
        elif message.data == "stoprecord":
            print "stop"
            if not self._p is None:
                self._p.send_signal(signal.SIGINT)

    def record(self):
        p = os.path.expanduser('~')+"/Documents/foodchain-data/bags/"+datetime.datetime.now().isoformat()
        p = p.split(".")[0]
        print p

        if not self._p is None:
            self._p.kill()
        self._p = subprocess32.Popen(["roslaunch", "freeplay_sparc", "record.launch","output_file:="+p])

    def run(self):
        rospy.spin()

if __name__ == "__main__":
    rospy.init_node("recorder");
    
    launcher = Launcher()
    launcher.run()

